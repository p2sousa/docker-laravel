steps:

  - id: "Executar o docker-compose"
    name: "gcr.io/$PROJECT_ID/docker-compose:1.24.0"
    args: ["-f", "docker-compose.cloudbuild.yml", "up", "-d"]

  - id: "Executar o composer"
    name: "gcr.io/cloud-builders/docker"
    args: ["exec", "-t", "app", "composer", "install"]

  - id: "Copiar o arquivo .env.example para .env"
    name: "gcr.io/cloud-builders/docker"
    args: ["exec", "-t", "app", "cp", ".env.example", ".env"]

  - id: "Rodar um artisan key:generate"
    name: "gcr.io/cloud-builders/docker"
    args: ["exec", "-t", "app", "php", "/var/www/artisan", "key:generate"]

  - id: "Executar as migrações"
    name: "gcr.io/cloud-builders/docker"
    args: ["exec", "-t", "app", "php", "/var/www/artisan", "migrate"]

  - id: "Executar os testes utilizando o PHPUnit"
    name: "gcr.io/cloud-builders/docker"
    args: ["exec", "-t", "app", "php", "/var/www/vendor/bin/phpunit", "-c", "/var/www/phpunit.xml"]

  - id: "Building image from Dockerfile.prod"
    name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/$PROJECT_ID/app-laravel:$SHORT_SHA", "-f", "Dockerfile.prod", "."]

  - id: "Pushing image"
    name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/app-laravel:$SHORT_SHA"]

  - id: "Ajustando arquivo de deployment do k8s"
    name: "gcr.io/cloud-builders/gcloud"
    entrypoint: "/bin/sh"
    args:
      - "-c"
      - |
        sed "s#img-app-deployment#gcr.io/$PROJECT_ID/app-laravel:$SHORT_SHA#g" ./.k8s/app/deployment.yml > ./.k8s/app/deployment-new.yml;
        cat ./.k8s/app/deployment-new.yml;
